{{ if .Values.node.web3signer.enabled }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "teku.fullname" . }}-web3signer
  labels:
{{- if and (eq .Values.cluster.provider "azure") (.Values.cluster.cloudNativeServices) }}
    aadpodidbinding: "{{ .Values.azure.identityName }}"
{{- end }}
    app.kubernetes.io/name: web3signer-statefulset
    app.kubernetes.io/component: web3signer
    app.kubernetes.io/part-of: {{ include "teku.fullname" . }}
    app.kubernetes.io/namespace: {{ .Release.Namespace }}
    app.kubernetes.io/release: {{ .Release.Name }}
    app.kubernetes.io/managed-by: helm
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: web3signer-statefulset
      app.kubernetes.io/component: web3signer
      app.kubernetes.io/part-of: {{ include "teku.fullname" . }}
      app.kubernetes.io/namespace: {{ .Release.Namespace }}
      app.kubernetes.io/release: {{ .Release.Name }}
      app.kubernetes.io/managed-by: helm
  serviceName: {{ include "teku.fullname" . }}-service-internal
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ include "teku.fullname" . }}-storage
      resources:
        requests:
          storage: "{{ .Values.cluster.storage.pvcSizeLimit }}"
  template:
    metadata:
      labels:
{{- if and (eq .Values.cluster.provider "azure") (.Values.cluster.cloudNativeServices) }}
        aadpodidbinding: "{{ .Values.azure.identityName }}"
{{- end }}
        app.kubernetes.io/name: web3signer-statefulset
        app.kubernetes.io/component: web3signer
        app.kubernetes.io/part-of: {{ include "teku.fullname" . }}
        app.kubernetes.io/namespace: {{ .Release.Namespace }}
        app.kubernetes.io/release: {{ .Release.Name }}
        app.kubernetes.io/managed-by: helm
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: {{ .Values.node.web3signer.metrics.port | quote}}
        prometheus.io/path: {{ .Values.node.metrics.web3signerMetricsPath | quote }}
    spec:
{{- if and (eq .Values.cluster.googleprovider "aws") (.Values.cluster.cloudNativeServices) }}
      serviceAccountName: {{ .Values.aws.serviceAccountName }}
{{- else }}
      serviceAccountName: {{ include "teku.fullname" . }}-sa
{{- end }}
      initContainers:
{{- if has .Values.cluster.provider .Values.cluster.storage.volumePermissionsFix }}
      # fix for minikube and PVC's only writable as root https://github.com/kubernetes/minikube/issues/1990
      - name: set-volume-permissions
        image: busybox
        command: ["sh", "-c", "chown -R 1000:1000 /data"]
        volumeMounts:
          - name: data
            mountPath: /data
        securityContext:
          runAsUser: 0
{{- end}}

      containers:
      - name: {{ .Release.Name }}-web3signer
        image: {{ .Values.image.web3signer.repository }}:{{ .Values.image.web3signer.tag }}
        imagePullPolicy: {{ .Values.image.web3signer.pullPolicy }}
        resources:
          requests:
            cpu: "{{ .Values.node.web3signer.resources.cpuRequest }}"
            memory: "{{ .Values.node.web3signer.resources.memRequest }}"
          limits:
            cpu: "{{ .Values.node.web3signer.resources.cpuLimit }}"
            memory: "{{ .Values.node.web3signer.resources.memLimit }}"
        env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
{{- if .Values.node.web3signer.env_opts }}
          - name: WEB3SIGNER_OPTS
            value: "{{ .Values.node.web3signer.env_opts }}"
{{- end }}
        volumeMounts:
          - name: web3signer-config
            mountPath: /etc/web3signer
            readOnly: true
          - name: data
            mountPath: {{ .Values.node.web3signer.dataPath }}
          - name: validator-keys
            mountPath: {{ .Values.node.web3signer.validatorKeysPath }}
            readOnly: true
        ports:
          - name: w3s-http
            containerPort: {{ .Values.node.web3signer.http.port }}
            protocol: TCP
          - name: w3s-metrics
            containerPort: {{ .Values.node.web3signer.metrics.port }}
            protocol: TCP
        command:
          - /bin/sh
          - -c
        args:
          - |
            exec
            /opt/web3signer/bin/web3signer \
              -c /etc/web3signer/config.yml

        # livenessProbe:
        #   httpGet:
        #     path: "/liveness"
        #     port: {{ .Values.node.web3signer.http.port }}
        #     httpHeaders:
        #       - name: Content-Type
        #         value: application/json
        #   initialDelaySeconds: 180
        #   periodSeconds: 60
      volumes:
      - name: web3signer-config
        configMap:
          name: {{ include "teku.fullname" . }}-web3signer-config
      - name: validator-keys
        secret:
          secretName: {{ include "teku.fullname" . }}-teku-validator-keys

{{- end }}
