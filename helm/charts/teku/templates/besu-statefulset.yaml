{{- if eq .Values.node.elc.client "besu" }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "teku.fullname" . }}-besu
  labels:
{{- if and (eq .Values.cluster.provider "azure") (.Values.cluster.cloudNativeServices) }}
    aadpodidbinding: "{{ .Values.azure.identityName }}"
{{- end }}
    app: {{ template "teku.fullname" . }}-besu
    chart: {{ template "teku.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    namespace: {{ .Release.Namespace }}
    component: {{ .Release.Name }}-besu
    helm.sh/chart: {{ include "teku.chart" . }}
    app.kubernetes.io/name: {{ include "teku.fullname" . }}-besu
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: {{ template "teku.fullname" . }}-besu
      release: {{ .Release.Name }}
      component: {{ .Release.Name }}-besu
      app.kubernetes.io/name: {{ include "teku.fullname" . }}-besu
      app.kubernetes.io/instance: {{ .Release.Name }}
  serviceName: {{ include "teku.fullname" . }}
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ include "teku.fullname" . }}-storage
      resources:
        requests:
          storage: "{{ .Values.cluster.storage.pvcSizeLimit }}"
  template:
    metadata:
      labels:
{{- if and (eq .Values.cluster.provider "azure") (.Values.cluster.cloudNativeServices) }}        
        aadpodidbinding: "{{ .Values.azure.identityName }}"
{{- end }}
        app: {{ template "teku.fullname" . }}-besu
        release: {{ .Release.Name }}
        component: {{ .Release.Name }}-besu
        app.kubernetes.io/name: {{ include "teku.fullname" . }}-besu
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: {{ .Values.node.besu.metrics.port | quote}}
        prometheus.io/path: "/metrics"
    spec:
{{- if and (eq .Values.cluster.provider "aws") (.Values.cluster.cloudNativeServices) }}
      serviceAccountName: {{ .Values.aws.serviceAccountName }}
{{- else }}
      serviceAccountName: {{ include "teku.fullname" . }}-sa
{{- end }}
      initContainers:

{{- if has .Values.cluster.provider .Values.volumePermissionsFix }}
      # fix for minikube and PVC's only writable as root https://github.com/kubernetes/minikube/issues/1990
      - name: volume-permission-besu
        image: busybox
        command: ["sh", "-c", "chown -R 1000:1000 /data"]
        volumeMounts:
          - name: data
            mountPath: /data
        securityContext:
          runAsUser: 0
{{- end}}

      containers:
     
      - name: {{ .Release.Name }}-besu
        image: {{ .Values.image.besu.repository }}:{{ .Values.image.besu.tag }}
        imagePullPolicy: {{ .Values.image.besu.pullPolicy }}
        resources:
          requests:
            cpu: "{{ .Values.node.besu.resources.cpuRequest }}"
            memory: "{{ .Values.node.besu.resources.memRequest }}"
          limits:
            cpu: "{{ .Values.node.besu.resources.cpuLimit }}"
            memory: "{{ .Values.node.besu.resources.memLimit }}"
        env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
{{- if .Values.node.besu.envBesuOpts }}
          - name: BESU_OPTS
            value: "{{ .Values.node.besu.envBesuOpts }}"
{{- end }}    
        volumeMounts:
          - name: besu-config
            mountPath: /etc/besu
            readOnly: true
          - name: {{ template "teku.fullname" . }}-keys
            mountPath: {{ .Values.node.besu.keysPath }}
            readOnly: true            
          - name: data
            mountPath: {{ .Values.node.besu.dataPath }}
        ports:
          - name: elc-rpc
            containerPort: {{ .Values.node.besu.rpc.port }}
            protocol: TCP
          - name: elc-engine
            containerPort: {{ .Values.node.besu.engine.port }}
            protocol: TCP
          - name: elc-rlpx
            containerPort: {{ .Values.node.besu.p2p.port }}
            protocol: TCP
          - name: elc-discovery
            containerPort: {{ .Values.node.besu.p2p.port }}
            protocol: UDP
          - name: elc-metrics
            containerPort: {{ .Values.node.besu.metrics.port }}
            protocol: TCP
                      
        command:
          - /bin/sh
          - -c
        args:
          - |
            exec
            /opt/besu/bin/besu \
              --config-file=/etc/besu/config.toml \
              --Xdns-enabled=true --Xdns-update-enabled=true --Xnat-kube-service-name={{ include "teku.fullname" . }}

        livenessProbe:
          httpGet:
            path: /liveness
            port: 8545
          initialDelaySeconds: 180
          periodSeconds: 60
      volumes:
      - name: besu-config
        configMap:
          name: {{ include "teku.fullname" . }}-besu-config

{{- end }}