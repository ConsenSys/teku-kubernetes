{{- if eq .Values.node.elc.client "besu" }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "teku.fullname" . }}-besu
  labels:
{{- if and (eq .Values.cluster.provider "azure") (.Values.cluster.cloudNativeServices) }}
    aadpodidbinding: "{{ .Values.azure.identityName }}"
{{- end }}
    app.kubernetes.io/name: besu-statefulset
    app.kubernetes.io/component: besu
    app.kubernetes.io/part-of: {{ include "teku.fullname" . }}
    app.kubernetes.io/namespace: {{ .Release.Namespace }}
    app.kubernetes.io/release: {{ .Release.Name }}
    app.kubernetes.io/managed-by: helm
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: besu-statefulset
      app.kubernetes.io/component: besu
      app.kubernetes.io/part-of: {{ include "teku.fullname" . }}
      app.kubernetes.io/namespace: {{ .Release.Namespace }}
      app.kubernetes.io/release: {{ .Release.Name }}
      app.kubernetes.io/managed-by: helm
  serviceName: {{ include "teku.fullname" . }}-service-internal
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ include "teku.fullname" . }}-storage
      resources:
        requests:
          storage: "{{ .Values.cluster.storage.pvcSizeLimit }}"
  template:
    metadata:
      labels:
{{- if and (eq .Values.cluster.provider "azure") (.Values.cluster.cloudNativeServices) }}        
        aadpodidbinding: "{{ .Values.azure.identityName }}"
{{- end }}
        app.kubernetes.io/name: besu-statefulset
        app.kubernetes.io/component: besu
        app.kubernetes.io/part-of: {{ include "teku.fullname" . }}
        app.kubernetes.io/namespace: {{ .Release.Namespace }}
        app.kubernetes.io/release: {{ .Release.Name }}
        app.kubernetes.io/managed-by: helm
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: {{ .Values.node.elc.metrics.port | quote}}
        prometheus.io/path: {{ .Values.node.metrics.elcMetricsPath | quote }}
    spec:
{{- if and (eq .Values.cluster.provider "aws") (.Values.cluster.cloudNativeServices) }}
      serviceAccountName: {{ .Values.aws.serviceAccountName }}
{{- else }}
      serviceAccountName: {{ include "teku.fullname" . }}-sa
{{- end }}
      initContainers:
      - name: wait-for-service
        image: busybox
        command: ["sh", "-c", "while ! nslookup {{ include "teku.fullname" . }}-discovery; do echo 'service still not up' && sleep 1; done;"]
      - name: set-external-ip
        image: gcr.io/cloud-builders/kubectl:latest
        command: ["/bin/bash"]
        args:
          - -c
          - >-
              sleep 10;
              EXTERNALIP=$(kubectl get services -n {{ .Release.Namespace }} {{ include "teku.fullname" . }}-discovery --output jsonpath='{.status.loadBalancer.ingress[0].ip}');
              echo $EXTERNALIP;
              kubectl get cm {{ include "teku.fullname" . }}-besu-config -o yaml -n {{ .Release.Namespace }} | sed "s/p2p-host=.*/p2p-host=\"${EXTERNALIP}\"/g" | kubectl replace -n {{ .Release.Namespace }} -f -

{{- if has .Values.cluster.provider .Values.cluster.storage.volumePermissionsFix }}
      # fix for minikube and PVC's only writable as root https://github.com/kubernetes/minikube/issues/1990
      - name: set-volume-permissions
        image: busybox
        command: ["sh", "-c", "chown -R 1000:1000 /data"]
        volumeMounts:
          - name: data
            mountPath: /data
        securityContext:
          runAsUser: 0
{{- end}}

      containers:
      - name: {{ .Release.Name }}-besu
        image: {{ .Values.image.besu.repository }}:{{ .Values.image.besu.tag }}
        imagePullPolicy: {{ .Values.image.besu.pullPolicy }}
        resources:
          requests:
            cpu: "{{ .Values.node.elc.resources.cpuRequest }}"
            memory: "{{ .Values.node.elc.resources.memRequest }}"
          limits:
            cpu: "{{ .Values.node.elc.resources.cpuLimit }}"
            memory: "{{ .Values.node.elc.resources.memLimit }}"
        env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
{{- if .Values.node.elc.besu.envBesuOpts }}
          - name: BESU_OPTS
            value: "{{ .Values.node.besu.envBesuOpts }}"
{{- end }}
        volumeMounts:
          - name: besu-config
            mountPath: /etc/besu
            readOnly: true
          - name: keys
            mountPath: {{ .Values.node.elc.keysPath }}
            readOnly: true
          - name: data
            mountPath: {{ .Values.node.elc.dataPath }}
        ports:
          - name: elc-rpc
            containerPort: {{ .Values.node.elc.rpc.port }}
            protocol: TCP
          - name: elc-engine
            containerPort: {{ .Values.node.elc.engine.port }}
            protocol: TCP
          - name: elc-rlpx
            containerPort: {{ .Values.node.elc.p2p.port }}
            protocol: TCP
          - name: elc-discovery
            containerPort: {{ .Values.node.elc.p2p.port }}
            protocol: UDP
          - name: elc-metrics
            containerPort: {{ .Values.node.elc.metrics.port }}
            protocol: TCP

        command:
          - /bin/sh
          - -c
        args:
          - |
            exec
            /opt/besu/bin/besu \
              --config-file=/etc/besu/config.toml \
              --nat-method=NONE

        livenessProbe:
          httpGet:
            path: /liveness
            port: {{ .Values.node.elc.rpc.port }}
            httpHeaders:
              - name: Content-Type
                value: application/json            
          initialDelaySeconds: 180
          periodSeconds: 60
      volumes:
      - name: besu-config
        configMap:
          name: {{ include "teku.fullname" . }}-besu-config
      - name: keys
        secret:
          secretName: {{ include "teku.fullname" . }}-keys

{{- end }}